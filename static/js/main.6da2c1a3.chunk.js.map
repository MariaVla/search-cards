{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","cards","map","card","SearchBox","onSearchChange","type","placeholder","onChange","e","target","value","Scroll","children","style","overflowY","border","height","ErrorBoundary","props","state","hasError","error","errorInfo","this","React","Component","App","useState","setCards","searchField","setSearchField","useEffect","fetch","then","resp","json","users","filteredCards","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAYeA,G,MAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC3B,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,mBACrB,gCACE,6BAAKF,IACL,4BAAIC,YCaGK,EAjBE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClB,OACE,qCACGA,QADH,IACGA,OADH,EACGA,EAAOC,KAAI,SAACC,GACX,OACE,cAAC,EAAD,CAEEP,GAAIO,EAAKP,GACTF,KAAMS,EAAKT,KACXC,MAAOQ,EAAKR,OAHPQ,EAAKP,UCOPQ,EAfG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACnB,OACE,qBAAKR,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVS,KAAK,SACLC,YAAY,kBACZC,SAAU,SAACC,GACTJ,EAAeI,EAAEC,OAAOC,aCKnBC,EAbA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OACE,qBACEC,MAAO,CACLC,UAAW,SACXC,OAAQ,kBACRC,OAAQ,SAJZ,SAOGJ,K,gCCLcK,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEC,UAAU,GAFR,E,8DAUDC,EAAOC,M,+BAMvB,OAAIC,KAAKJ,MAAMC,SAEN,uDAGFG,KAAKL,MAAMN,Y,gDAhBYS,GAE9B,MAAO,CAAED,UAAU,O,GARoBI,IAAMC,WC0ClCC,MAvCf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACN3B,EADM,KACC4B,EADD,OAEyBD,mBAAS,IAFlC,mBAENE,EAFM,KAEOC,EAFP,KAcbC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GAAD,OAAWR,EAASQ,QAC3B,IAEH,IAAMC,EAAa,OAAGrC,QAAH,IAAGA,OAAH,EAAGA,EAAOsC,QAAO,SAACpC,GACnC,OAAOA,EAAKT,KAAK8C,cAAcC,SAASX,EAAYU,kBAGtD,OAAQvC,EAAMyC,OAGZ,sBAAK7C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWQ,eAAgB0B,IAC3B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAU9B,MAAOqC,WAPvB,6CCpBWK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6da2c1a3.chunk.js","sourcesContent":["const Card = ({ name, email, id }) => {\n  return (\n    <div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\n      <img alt='robots' src={`https://robohash.org/${id}?size=200x200`} />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import Card from './Card';\n\nconst CardList = ({ cards }) => {\n  return (\n    <div>\n      {cards?.map((card) => {\n        return (\n          <Card\n            key={card.id}\n            id={card.id}\n            name={card.name}\n            email={card.email}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardList;\n","const SearchBox = ({ onSearchChange }) => {\n  return (\n    <div className='pa2'>\n      <input\n        className='pa3 ba b--green bg-lightest-blue'\n        type='search'\n        placeholder='Search cards...'\n        onChange={(e) => {\n          onSearchChange(e.target.value);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","const Scroll = ({ children }) => {\n  return (\n    <div\n      style={{\n        overflowY: 'scroll',\n        border: '1px solid white',\n        height: '600px',\n      }}\n    >\n      {children}\n    </div>\n  );\n};\nexport default Scroll;\n","import React from 'react';\n\nfunction logErrorToMyService(error, errorInfo) {}\n\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    logErrorToMyService(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n\n    return this.props.children;\n  }\n}\n","import { useState, useEffect } from 'react';\nimport './App.css';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [searchField, setSearchField] = useState('');\n\n  // useCallback will return a memoized version of the callback that only\n  // changes if one of the dependencies has changed.\n  // const filteredCards = useCallback(\n  //   () =>\n  //     cards.filter((card) => {\n  //       return card.name.toLowerCase().includes(searchField.toLowerCase());\n  //     }),\n  //   [JSON.stringify(cards), searchField]\n  // );\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((resp) => resp.json())\n      .then((users) => setCards(users));\n  }, []);\n\n  const filteredCards = cards?.filter((card) => {\n    return card.name.toLowerCase().includes(searchField.toLowerCase());\n  });\n\n  return !cards.length ? (\n    <h3>Loading...</h3>\n  ) : (\n    <div className='tc'>\n      <h1 className='f1'>Search Cards</h1>\n      <SearchBox onSearchChange={setSearchField} />\n      <Scroll>\n        <ErrorBoundry>\n          <CardList cards={filteredCards} />\n        </ErrorBoundry>\n      </Scroll>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}